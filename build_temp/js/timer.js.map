{"version":3,"file":"timer.js","sources":["js/timer.js"],"sourcesContent":["// Окружность уменьшается за счет штриховки. Фактически, обводка состоит\n// из одного длинного штриха, а пропуск за счет расстояния до следующего\n// штриха. Задача правильной заливки состоит в том, чтобы правильно\n// задать расстояние до следующего штриха.\n//\n// Из радиуса можно рассчитать длину окружности. При известной длине окружности,\n// количестве шагов и номере текущего шага в анимации можно понять, на сколько\n// нужно уменьшать длину окружности на текущем шаге. Для этого надо вычесть\n// из нее длину одного шага умноженную на номер текущего шага.\n//\n// Длина окружности = 2πR\n// Длина шага = Длина окружности / Количество шагов\n// Пропуск = Длина шага * Номер шага\nconst redrawCircle = (circle, radius, animation) => {\n  const length = 2 * Math.PI * radius;\n  const stepLength = length / animation.steps;\n  const lengthToClear = stepLength * animation.step;\n\n  circle.setAttributeNS(null, `stroke-dasharray`, length.toString());\n  circle.setAttributeNS(null, `stroke-dashoffset`, lengthToClear.toString());\n\n  return circle;\n};\n\n\nconst addLeadingZero = (val) => val < 10 ? `0${val}` : val;\n\n\nconst redrawTimer = (timer, animation) => {\n  const total = animation.stepDuration * animation.steps;\n  const passed = animation.stepDuration * animation.step;\n  const timeLeft = window.formatTime(total, passed);\n\n  timer.querySelector(`.timer-value-mins`).textContent = addLeadingZero(timeLeft.minutes);\n  timer.querySelector(`.timer-value-secs`).textContent = addLeadingZero(timeLeft.seconds);\n\n  return timer;\n};\n\n\nwindow.initializeCountdown = (time) => {\n  const element = document.querySelector(`.timer-line`);\n  const radius = parseInt(element.getAttributeNS(null, `r`), 10);\n  const timer = document.querySelector(`.timer-value`);\n\n  return window.animation.animate(window.animation.getAnimation(0, 1000, time), (animation) => {\n    redrawCircle(element, radius, animation);\n    redrawTimer(timer, animation);\n  }, () => timer.classList.add(`timer-value--finished`));\n};\n"],"names":["redrawCircle","circle","radius","animation","length","Math","PI","stepLength","steps","lengthToClear","step","setAttributeNS","toString","addLeadingZero","val","redrawTimer","timer","total","stepDuration","passed","timeLeft","window","formatTime","querySelector","textContent","minutes","seconds","initializeCountdown","time","element","document","parseInt","getAttributeNS","animate","getAnimation","classList","add"],"mappings":";;;AAAA;;;;;;;;;;;;;AAaA,IAAMA,eAAe,SAAfA,YAAe,CAACC,MAAD,EAASC,MAAT,EAAiBC,SAAjB,EAA+B;MAC5CC,SAAS,IAAIC,KAAKC,EAAT,GAAcJ,MAA7B;MACMK,aAAaH,SAASD,UAAUK,KAAtC;MACMC,gBAAgBF,aAAaJ,UAAUO,IAA7C;;SAEOC,cAAP,CAAsB,IAAtB,sBAAgDP,OAAOQ,QAAP,EAAhD;SACOD,cAAP,CAAsB,IAAtB,uBAAiDF,cAAcG,QAAd,EAAjD;;SAEOX,MAAP;CARF;;AAYA,IAAMY,iBAAiB,SAAjBA,cAAiB,CAACC,GAAD;SAASA,MAAM,EAAN,SAAeA,GAAf,GAAuBA,GAAhC;CAAvB;;AAGA,IAAMC,cAAc,SAAdA,WAAc,CAACC,KAAD,EAAQb,SAAR,EAAsB;MAClCc,QAAQd,UAAUe,YAAV,GAAyBf,UAAUK,KAAjD;MACMW,SAAShB,UAAUe,YAAV,GAAyBf,UAAUO,IAAlD;MACMU,WAAWC,OAAOC,UAAP,CAAkBL,KAAlB,EAAyBE,MAAzB,CAAjB;;QAEMI,aAAN,sBAAyCC,WAAzC,GAAuDX,eAAeO,SAASK,OAAxB,CAAvD;QACMF,aAAN,sBAAyCC,WAAzC,GAAuDX,eAAeO,SAASM,OAAxB,CAAvD;;SAEOV,KAAP;CARF;;AAYAK,OAAOM,mBAAP,GAA6B,UAACC,IAAD,EAAU;MAC/BC,UAAUC,SAASP,aAAT,eAAhB;MACMrB,SAAS6B,SAASF,QAAQG,cAAR,CAAuB,IAAvB,MAAT,EAA4C,EAA5C,CAAf;MACMhB,QAAQc,SAASP,aAAT,gBAAd;;SAEOF,OAAOlB,SAAP,CAAiB8B,OAAjB,CAAyBZ,OAAOlB,SAAP,CAAiB+B,YAAjB,CAA8B,CAA9B,EAAiC,IAAjC,EAAuCN,IAAvC,CAAzB,EAAuE,UAACzB,SAAD,EAAe;iBAC9E0B,OAAb,EAAsB3B,MAAtB,EAA8BC,SAA9B;gBACYa,KAAZ,EAAmBb,SAAnB;GAFK,EAGJ;WAAMa,MAAMmB,SAAN,CAAgBC,GAAhB,yBAAN;GAHI,CAAP;CALF;;"}