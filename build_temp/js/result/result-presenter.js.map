{"version":3,"file":"result-presenter.js","sources":["js/view.js","js/utils.js","js/base-model.js","js/game/game-model.js","js/data.js","js/result/result-success-view.js","js/result/result-fail-view.js","js/welcome/welcome-view.js","js/welcome/welcome-presenter.js","js/game/game-genre-view.js","js/game/game-artist-view.js","js/game/game-presenter.js","js/result/result-model.js","js/timer-view.js","js/application.js","js/result/result-presenter.js"],"sourcesContent":["export default class AbstractView {\n\n  get template() {\n    throw new Error(`View should be defined`);\n  }\n\n  get element() {\n    if (!this._element) {\n      this.create();\n    }\n\n    return this._element;\n  }\n\n  render() {\n    return this.createElement(this.template);\n  }\n\n  bind() {\n\n  }\n\n  create() {\n    this._element = this.render();\n    this.bind();\n  }\n\n  createElement(template) {\n    const outer = document.createElement(`template`);\n    outer.innerHTML = template;\n    return outer.content;\n  }\n\n  show() {\n    const mainScreen = document.querySelector(`.main`);\n    mainScreen.innerHTML = ``;\n    mainScreen.appendChild(this.element);\n  }\n}\n","import gameModel from './game/game-model.js';\n\nexport function deepCopy(object) {\n  return JSON.parse(JSON.stringify(object));\n}\n\nconst preloadData = {};\nexport function preloadAudio(questions, successFunction, failFunction) {\n  preloadData.files = [];\n  preloadData.successFunction = successFunction;\n  preloadData.failFunction = failFunction;\n\n  for (let question of questions) {\n    switch (question.type) {\n      case gameModel.QuestionType.ARTIST:\n        preloadData.files.push(question.data.file);\n        break;\n      case gameModel.QuestionType.GENRE:\n        preloadData.files = preloadData.files.concat(getFilesFromAnswers(question.answers));\n        break;\n    }\n  }\n\n  try {\n    loadFile();\n  } catch (error) {\n    preloadData.failFunction();\n  }\n}\n\nfunction loadFile() {\n  let player = new Audio();\n  player.addEventListener(`canplaythrough`, audioLoadedHandler);\n  if (preloadData.files[0]) {\n    player.src = preloadData.files[0];\n  } else {\n    audioLoadedHandler();\n  }\n}\n\nfunction audioLoadedHandler(event) {\n  preloadData.files.shift();\n\n  if (!preloadData.files.length) {\n    preloadData.successFunction();\n  } else {\n    loadFile();\n  }\n}\n\nfunction getFilesFromAnswers(answers) {\n  const returnArray = [];\n\n  for (let answer of answers) {\n    returnArray.push(answer.file);\n  }\n\n  return returnArray;\n}\n","export class BaseAdapter {\n  constructor() {\n    if (new.target === BaseAdapter) {\n      throw new Error();\n    }\n  }\n\n  preprocess(data) {\n    return data;\n  }\n\n  toServer(data) {\n    return data;\n  }\n}\n\nconst defaultAdapter = new class extends BaseAdapter {}();\n\nexport default class BaseModel {\n  get urlRead() {\n    throw new Error(`Abstract method. Define the URL for model.`);\n  }\n\n  get urlWrite() {\n    throw new Error(`Abstract method. Define the URL for model.`);\n  }\n\n  load(adapter = defaultAdapter) {\n    return fetch(this.urlRead)\n      .then((resp) => resp.json())\n      .then(adapter.preprocess);\n  }\n\n  send(data, adapter = defaultAdapter) {\n    const requestSettings = {\n      body: adapter.toServer(data),\n      headers: {\n        'Content-Type': `application/json`\n      },\n      method: `POST`\n    };\n\n    return fetch(this.urlWrite, requestSettings)\n      .then(this.onUpload);\n  }\n}\n","import {deepCopy} from '../utils.js';\nimport BaseModel from '../base-model.js';\nimport {BaseAdapter} from '../base-model.js';\n\nconst gameModelAdapter = new class extends BaseAdapter {\n  constructor() {\n    super();\n  }\n\n  preprocess(data) {\n    return data.map((item) => {\n      switch (item.type) {\n        case `artist`:\n          return {type: 1, data: {file: item.src}, answers: gameModelAdapter.proceedArtistAnswers(item.answers)};\n        case `genre`:\n          return {type: 2, data: item.question, answers: gameModelAdapter.proceedGenreAnswers(item.answers, item.genre)};\n      }\n\n      return {};\n    });\n  }\n\n  toServer(data) {\n    return JSON.stringify(data);\n  }\n\n  proceedArtistAnswers(answers) {\n    return answers.map((item) => {\n      return {valid: item.isCorrect, artistName: item.title, image: item.image.url};\n    });\n  }\n\n  proceedGenreAnswers(answers, correctGenre) {\n    return answers.map((item) => {\n      return {valid: item.genre === correctGenre ? true : false, file: item.src};\n    });\n  }\n}();\n\nclass GameModel extends BaseModel {\n\n  get urlRead() {\n    return `https://intensive-ecmascript-server-btfgudlkpi.now.sh/guess-melody/questions`;\n  }\n\n  get correctAnswers() {\n    return this.state.questions.reduce((sum, question) => {\n      return sum + (question.isUserAnswerCorrect ? 1 : 0);\n    }, 0);\n  }\n\n  get gameTime() {\n    return this.initState.time - this.state.time;\n  }\n\n  set timeLeft(value) {\n    this.state.time = value;\n\n    if (!this.state.time) {\n      this.onFinishGame();\n    }\n  }\n\n  get timeLeft() {\n    return this.state.time;\n  }\n\n  get lifes() {\n    return this.state.life;\n  }\n\n  get currentQuestion() {\n    return this.state.questions[this.state.currentIndex];\n  }\n\n  get stats() {\n    const stats = {};\n    stats.answers = this.correctAnswers;\n    stats.time = this.gameTime;\n\n    return stats;\n  }\n\n  get isFail() {\n    return !this.timeLeft || !this.lifes;\n  }\n\n  constructor() {\n    super();\n\n    this.QuestionType = {\n      ARTIST: 1,\n      GENRE: 2\n    };\n\n    this.questions = [];\n    this.initState = Object.freeze({\n      'time': 120,\n      'life': 3,\n      'currentIndex': 0,\n      'questions': deepCopy(this.questions)\n    });\n    this.state = Object.assign({}, this.initState);\n  }\n\n  resetGame() {\n    this.state = Object.assign({}, this.initState, {questions: deepCopy(this.questions)});\n  }\n\n  answer(...selectedIndexes) {\n    this.proceedCurrentAnswer(selectedIndexes);\n\n    if (this.currentQuestion.isUserAnswerCorrect) {\n      this.nextQuestion();\n    } else {\n      this.state.life = Math.max(0, this.state.life - 1);\n\n      if (this.state.life < 1) {\n        this.onFinishGame();\n      } else {\n        this.nextQuestion();\n      }\n    }\n  }\n\n  nextQuestion() {\n    this.state.currentIndex++;\n\n    if (this.state.currentIndex >= this.state.questions.length) {\n      this.onFinishGame();\n    } else {\n      this.onNextQuestion();\n    }\n  }\n\n  proceedCurrentAnswer(answerIndexes) {\n    const answers = this.currentQuestion.answers;\n    answerIndexes.forEach((item) => {\n      answers[item].isUserAnswer = true;\n    });\n\n    const correct = answers.findIndex((item, i) => item.valid && !item.isUserAnswer || !item.valid && item.isUserAnswer) < 0;\n    this.currentQuestion.isUserAnswerCorrect = correct;\n    return correct;\n  }\n\n  onFinishGame() {\n\n  }\n\n  onNextQuestion() {\n\n  }\n\n  load() {\n    return super.load(gameModelAdapter);\n  }\n}\n\nconst model = new GameModel();\nexport default model;\n","import gameModel from './game/game-model.js';\n\nconst USERNAME = `451989`;\nexport const SERVER_URL = `https://intensive-ecmascript-server-btfgudlkpi.now.sh/guess-melody/stats/${USERNAME}`;\n\nexport const gameInfo = Object.freeze({\n  'gameName': `Угадай Мелодию`,\n  'rules': `Правила просты&nbsp;— за&nbsp;${Math.round(gameModel.initState.time / 60)} минуты дать\n  максимальное количество правильных ответов.<br>\n  Удачи!`\n});\n","import AbstractView from '../view.js';\nimport * as data from '../data.js';\n\nexport default class ResultFailView extends AbstractView {\n\n  constructor(stats) {\n    super();\n\n    this._stats = stats;\n  }\n\n  get template() {\n    return `<section class=\"main main--result\">\n        <section class=\"logo\" title=\"${data.gameInfo.gameName}\"><h1>${data.gameInfo.gameName}</h1></section>\n        <h2 class=\"title\">Вы настоящий меломан!</h2>\n        <div class=\"main-stat\">За&nbsp;${this.getTimeString()}<br>вы&nbsp;отгадали ${this._stats.answers}&nbsp;мелодии</div>\n        <span class=\"main-comparison\">Это&nbsp;лучше чем у&nbsp;${this._stats.percentHighscore}&nbsp;игроков</span>\n        <span role=\"button\" tabindex=\"0\" class=\"main-replay\">Сыграть ещё раз</span>\n      </section>`;\n  }\n\n  onRestartClick() {\n\n  }\n\n  bind() {\n    const screenDom = this.element;\n\n    const button = screenDom.querySelector(`.main-replay`);\n    button.onclick = () => {\n      this.onRestartClick();\n    };\n\n    return screenDom;\n  }\n\n  getTimeString() {\n    const time = this._stats.time;\n\n    const mins = Math.floor(time / 60);\n    const secs = time - (mins * 60);\n\n    if (mins) {\n      return `${mins} минуты ${secs} секунды`;\n    } else {\n      return `${secs} секунды`;\n    }\n  }\n}\n","import AbstractView from '../view.js';\nimport * as data from '../data.js';\n\nexport default class ResultFailView extends AbstractView {\n  get template() {\n    return `<section class=\"main main--result\">\n      <section class=\"logo\" title=\"${data.gameInfo.gameName}\"><h1>${data.gameInfo.gameName}</h1></section>\n        <h2 class=\"title\">Вы проиграли</h2>\n        <div class=\"main-stat\">Ничего, вам повезет в следующий раз</div>\n        <span role=\"button\" tabindex=\"0\" class=\"main-replay\">Сыграть ещё раз</span>\n      </section>`;\n  }\n\n  onRestartClick() {\n\n  }\n\n  bind() {\n    const screenDom = this.element;\n\n    const button = screenDom.querySelector(`.main-replay`);\n    button.onclick = () => {\n      this.onRestartClick();\n    };\n\n    return screenDom;\n  }\n}\n","import AbstractView from '../view.js';\nimport {gameInfo} from '../data.js';\n\nexport default class WelcomeView extends AbstractView {\n\n  get template() {\n    return `<section class=\"main main--welcome\">\n      <section class=\"logo\" title=\"${gameInfo.gameName}\"><h1>${gameInfo.gameName}</h1></section>\n      <button class=\"main-play\">Начать игру</button>\n      <h2 class=\"title main-title\">Правила игры</h2>\n      <p class=\"text main-text\">\n        ${gameInfo.rules}      \n      </p>\n    </section>`;\n  }\n\n  bind() {\n    const button = this.element.querySelector(`.main-play`);\n    button.onclick = () => {\n      this.onStartClick();\n    };\n  }\n\n  onStartClick() {\n\n  }\n\n}\n","import WelcomeView from './welcome-view.js';\nimport application from '../application.js';\n\nclass WelcomePresenter {\n  constructor() {\n    this.view = new WelcomeView();\n  }\n\n  init() {\n    this.view.create();\n    this.view.show();\n    this.view.onStartClick = () => {\n      location.hash = application.ControllerId.GAME;\n    };\n\n    application.destroyTimerView();\n  }\n}\n\nexport default new WelcomePresenter();\n","import AbstractView from '../view.js';\n\nexport default class GameGenreView extends AbstractView {\n\n  constructor(question) {\n    super();\n\n    this._question = question;\n  }\n\n  get template() {\n    return `<section class=\"main main--level main--level-genre\">\n    <div class=\"main-wrap\">\n      <h2 class=\"title\">${this._question.data.toLowerCase()}</h2>\n      <form class=\"genre\">\n        ${Array.prototype.slice.call(this._question.answers, 0).map((answer, index) =>\n           this.createSong(index, answer)\n        )}\n        <button class=\"genre-answer-send\" type=\"submit\">Ответить</button>\n      </form>\n    </div>\n  </section>`;\n  }\n\n  createSong(index, answer) {\n    return `<div class=\"genre-answer\">\n      <div class=\"player-wrapper\"></div>\n        <input type=\"checkbox\" name=\"answer\" value=\"answer-1\" id=\"a-${index}\">\n        <label class=\"genre-answer-check\" for=\"a-${index}\"></label>\n      </div>`;\n  }\n\n  onAnswer(...indexes) {\n\n  }\n\n  bind() {\n    const screenDom = this.element;\n\n    this.answers = Array.prototype.slice.call(screenDom.querySelectorAll(`.genre-answer`), 0);\n    this.answerButton = screenDom.querySelector(`.genre-answer-send`);\n\n    const playerWrappers = Array.prototype.slice.call(screenDom.querySelectorAll(`.player-wrapper`), 0);\n\n    playerWrappers.forEach((item, i) => {\n      item.addEventListener(`click`, (event) => {\n        event.preventDefault();\n\n        if (this.currentAudio) {\n          this.currentAudio.pause();\n        }\n\n        this.currentAudio = Array.prototype.slice.call(item.querySelectorAll(`audio`))[0];\n      });\n\n      window.initializePlayer(item, Array.prototype.slice.call(this._question.answers, 0)[i].file, false, true);\n    });\n\n    this.answers.forEach((item) => {\n      const checkbox = item.querySelector(`input`);\n\n      checkbox.addEventListener(`click`, () => {\n        this.answerClickHandler();\n      });\n    });\n\n    this.answerButton.disabled = true;\n\n    this.answerButton.onclick = (event) => {\n      event.preventDefault();\n\n      const answerIndexes = [];\n      Array.prototype.slice.call(this.answers, 0).forEach((item, i, array) => {\n        if (this.answers[i].querySelector(`input`).checked) {\n          answerIndexes.push(i);\n        }\n      });\n\n      this.onAnswer(...answerIndexes);\n    };\n  }\n\n  answerClickHandler() {\n    this.answerButton.disabled = false;\n  }\n\n}\n","import AbstractView from '../view.js';\n\nexport default class GameArtistView extends AbstractView {\n  constructor(question) {\n    super();\n\n    this._question = question;\n  }\n\n  get template() {\n    return `<section class=\"main main--level main--level-artist\">\n      <div class=\"main-wrap\">\n        <div class=\"main-timer\"></div>\n  \n        <h2 class=\"title main-title\">Кто исполняет эту песню?</h2>\n        <div class=\"player-wrapper\"></div>\n        <form class=\"main-list\">\n          ${Array.prototype.slice.call(this._question.answers, 0).map((answer, index) =>\n            this.createAnswer(index, answer)\n          )}\n        </form>\n      </div>\n    </section>`;\n  }\n\n  createAnswer(index, answer) {\n    return `<div class=\"main-answer-wrapper\">\n      <input class=\"main-answer-r\" type=\"radio\" id=\"answer-${index}\" name=\"answer\" value=\"${index}\" />\n      <label class=\"main-answer\" for=\"answer-1\">\n        <img class=\"main-answer-preview\" src=\"${answer.image}\">\n        ${answer.artistName}\n      </label> \n    </div>`;\n  }\n\n  onAnswer(...indexes) {\n\n  }\n\n  bind() {\n    const screenDom = this.element;\n    const answers = Array.prototype.slice.call(screenDom.querySelectorAll(`.main-answer-wrapper`), 0);\n    const player = screenDom.querySelector(`.player-wrapper`);\n\n    const artistSong = this._question.data;\n    window.initializePlayer(player, artistSong.file, true, true);\n\n    for (let answer of answers) {\n      answer.addEventListener(`click`, (event) => {\n        event.preventDefault();\n\n        const wrapperElement = event.currentTarget;\n        const index = wrapperElement.querySelector(`.main-answer-r`).value;\n        this.onAnswer(index);\n      });\n    }\n  }\n\n\n}\n","import GenreView from './game-genre-view.js';\nimport ArtistView from './game-artist-view.js';\nimport gameModel from './game-model.js';\nimport application from '../application.js';\n\nclass GamePresenter {\n\n  constructor(model) {\n    this._model = model;\n  }\n\n  init() {\n    switch (this._model.currentQuestion.type) {\n      case this._model.QuestionType.ARTIST:\n        this.view = new ArtistView(this._model.currentQuestion);\n        break;\n      case this._model.QuestionType.GENRE:\n        this.view = new GenreView(this._model.currentQuestion);\n        break;\n    }\n\n    this.view.create();\n    this.view.show();\n    this.view.onAnswer = (...answerIndexes) => this._model.answer(...answerIndexes);\n\n    this._model.onNextQuestion = () => {\n      application.showGame();\n    };\n\n    this._model.onFinishGame = () => {\n      if (this._model.isFail) {\n        location.hash = application.ControllerId.RESULT;\n      } else {\n        location.hash = `${application.ControllerId.RESULT}=${JSON.stringify(this._model._stats)}`;\n      }\n\n      this.destroy();\n    };\n\n    if (this._model.state.currentIndex === 0) {\n      application.initTimerView(this._model.timeLeft);\n\n      this.timer = setInterval(() =>\n          this.updateTimer()\n        , 1000);\n    }\n  }\n\n  destroy() {\n    clearInterval(this.timer);\n    this._model.resetGame();\n  }\n\n  updateTimer() {\n    this._model.timeLeft--;\n  }\n}\n\nexport default new GamePresenter(gameModel);\n\n","import BaseModel from '../base-model.js';\nimport {BaseAdapter} from '../base-model.js';\nimport {SERVER_URL} from '../data.js';\n\n\nconst resultAdapter = new class extends BaseAdapter {\n  preprocess(data) {\n    if (!data) {\n      return [];\n    }\n\n    data.forEach((item, index) => {\n      if (!item.hasOwnProperty(`answers`) || !item.hasOwnProperty(`time`)) {\n        data.splice(index, 1);\n      }\n    });\n    return data;\n  }\n\n  toServer(data) {\n    return JSON.stringify(data);\n  }\n}();\n\nclass ResultModel extends BaseModel {\n  constructor() {\n    super();\n\n    this._stats = [];\n  }\n\n  get urlRead() {\n    return SERVER_URL;\n  }\n\n  get urlWrite() {\n    return SERVER_URL;\n  }\n\n  send(data) {\n    super.send(data, resultAdapter);\n  }\n\n  load() {\n    return super.load(resultAdapter);\n  }\n}\n\nexport default new ResultModel();\n","const screenTemplate = () => `\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"timer\" viewBox=\"0 0 780 780\">\n    <circle\n    cx=\"390\" cy=\"390\" r=\"370\"\n    class=\"timer-line\"\n    style=\"filter: url(.#blur); transform: rotate(-90deg) scaleY(-1); transform-origin: center\"></circle>\n  \n    <div class=\"timer-value\" xmlns=\"http://www.w3.org/1999/xhtml\">\n    <span class=\"timer-value-mins\"></span><!--\n      --><span class=\"timer-value-dots\">:</span><!--\n    --><span class=\"timer-value-secs\"></span>\n    </div>\n  </svg>`;\n\nexport default function getElement() {\n  const outer = document.createElement(`template`);\n  outer.innerHTML = screenTemplate();\n  return outer.content;\n}\n","import welcome from './welcome/welcome-presenter.js';\nimport game from './game/game-presenter.js';\nimport result from './result/result-presenter.js';\nimport model from './game/game-model.js';\nimport resultModel from './result/result-model.js';\nimport timer from './timer-view.js';\nimport * as utils from './utils.js';\n\nclass Application {\n  constructor() {\n    this.ControllerId = {\n      WELCOME: ``,\n      GAME: `game`,\n      RESULT: `result`\n    };\n\n    window.onhashchange = () => {\n      this.initLocation();\n    };\n\n    const preloaderRemove = this.showWelcome;\n\n    model.load()\n      .then((data) => this.setup(data))\n      .then(() => {\n        return resultModel.load();\n      }).catch(() => {\n        return [];\n      })\n      .then((stats) => {\n        resultModel._stats = stats;\n      }).then(() => {\n        return new Promise((resolve, reject) => {\n          // utils.preloadAudio(model.questions, resolve, reject);\n          resolve();\n        });\n      }).then(() => {\n        preloaderRemove();\n        this.initLocation();\n      })\n      .catch(window.console.error);\n  }\n\n  setup(questions) {\n    model.questions = questions;\n\n    this._routes = {\n      [this.ControllerId.WELCOME]: welcome,\n      [this.ControllerId.GAME]: game,\n      [this.ControllerId.RESULT]: result\n    };\n  }\n\n  init() {\n\n  }\n\n  initTimerView(time) {\n    const appDiv = document.querySelector(`.timer`);\n    appDiv.appendChild(timer());\n\n    this.timerStopFunction = window.initializeCountdown(time);\n  }\n\n  destroyTimerView() {\n    const appDiv = document.querySelector(`.timer`);\n    appDiv.innerHTML = ``;\n\n    if (this.timerStopFunction) {\n      this.timerStopFunction();\n    }\n  }\n\n  showWelcome() {\n    welcome.init();\n  }\n\n  showGame() {\n    game.init();\n  }\n\n  initLocation() {\n    const params = this.getJSONHashString(location.hash);\n\n    this.changeController(this.getRawHashString(location.hash), params);\n  }\n\n  getRawHashString(hash) {\n    let returnString = hash.replace(`#`, ``);\n\n    const index = hash.indexOf(`=`);\n    if (index > 0) {\n      returnString = returnString.substr(0, index - 1);\n    }\n\n    return returnString;\n  }\n\n  getJSONHashString(hash) {\n    let returnString = hash.replace(`#`, ``);\n    const index = hash.indexOf(`=`);\n\n    if (index > 0) {\n      returnString = returnString.substr(index);\n    }\n\n    try {\n      return JSON.parse(returnString);\n    } catch (error) {\n      return null;\n    }\n  }\n\n  changeController(route = ``, params) {\n    const controller = this._routes[route];\n    game.destroy();\n\n    if (controller) {\n      controller.init(params);\n    } else {\n      this.showWelcome();\n    }\n  }\n}\n\nexport default new Application();\n","import SuccessView from './result-success-view.js';\nimport FailView from './result-fail-view.js';\nimport application from '../application.js';\nimport resultModel from './result-model.js';\n\nclass ResultPresenter {\n  init(userStat) {\n    if (userStat) {\n      resultModel.send(userStat);\n      this.view = new SuccessView(Object.assign({}, userStat, {percentHighscore: this.getPercentHighscore(userStat)}));\n\n    } else {\n      this.view = new FailView();\n    }\n\n    this.view.create();\n    this.view.show();\n\n    this.view.onRestartClick = () => {\n      location.hash = application.ControllerId.WELCOME;\n    };\n\n    application.destroyTimerView();\n  }\n\n  getPercentHighscore(userStat) {\n    userStat.isPlayerResult = true;\n\n    const serverStats = resultModel._stats;\n    serverStats.push(userStat);\n\n    serverStats.sort((a, b) => {\n      return b.answers - a.answers || a.time - b.time;\n    });\n\n    const playerIndex = serverStats.findIndex((item) => {\n      if (item.isPlayerResult) {\n        item.isPlayerResult = false;\n        return true;\n      }\n\n      return false;\n    });\n\n    const result = 100 - ((playerIndex) / serverStats.length) * 100;\n    return Math.floor(result) + `%`;\n  }\n}\nexport default new ResultPresenter();\n"],"names":["AbstractView","createElement","template","_element","render","bind","outer","document","innerHTML","content","mainScreen","querySelector","appendChild","element","Error","create","deepCopy","object","JSON","parse","stringify","BaseAdapter","new","target","data","defaultAdapter","BaseModel","adapter","fetch","urlRead","then","resp","json","preprocess","requestSettings","toServer","urlWrite","onUpload","gameModelAdapter","map","item","type","file","src","answers","proceedArtistAnswers","question","proceedGenreAnswers","genre","valid","isCorrect","artistName","title","image","url","correctGenre","GameModel","state","questions","reduce","sum","isUserAnswerCorrect","initState","time","value","onFinishGame","life","currentIndex","stats","correctAnswers","gameTime","timeLeft","lifes","QuestionType","Object","freeze","assign","selectedIndexes","proceedCurrentAnswer","currentQuestion","nextQuestion","Math","max","length","onNextQuestion","answerIndexes","forEach","isUserAnswer","correct","findIndex","i","model","USERNAME","SERVER_URL","gameInfo","round","gameModel","ResultFailView","_stats","screenDom","button","onclick","onRestartClick","mins","floor","secs","gameName","getTimeString","percentHighscore","WelcomeView","onStartClick","rules","WelcomePresenter","view","show","hash","application","ControllerId","GAME","destroyTimerView","GameGenreView","_question","index","answer","Array","prototype","slice","call","querySelectorAll","answerButton","playerWrappers","addEventListener","event","preventDefault","currentAudio","pause","initializePlayer","checkbox","answerClickHandler","disabled","array","checked","push","onAnswer","toLowerCase","createSong","GameArtistView","player","artistSong","wrapperElement","currentTarget","createAnswer","GamePresenter","_model","ARTIST","ArtistView","GENRE","GenreView","showGame","isFail","RESULT","destroy","initTimerView","timer","setInterval","updateTimer","resetGame","resultAdapter","hasOwnProperty","splice","ResultModel","screenTemplate","getElement","Application","onhashchange","initLocation","preloaderRemove","showWelcome","load","setup","resultModel","catch","Promise","resolve","reject","window","console","error","_routes","WELCOME","welcome","game","result","appDiv","timerStopFunction","initializeCountdown","init","params","getJSONHashString","location","changeController","getRawHashString","returnString","replace","indexOf","substr","route","controller","ResultPresenter","userStat","send","SuccessView","getPercentHighscore","FailView","isPlayerResult","serverStats","sort","a","b","playerIndex"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAqBA;;;;;;;6BAcV;aACA,KAAKC,aAAL,CAAmB,KAAKC,QAAxB,CAAP;;;;2BAGK;;;6BAIE;WACFC,QAAL,GAAgB,KAAKC,MAAL,EAAhB;WACKC,IAAL;;;;kCAGYH,UAAU;UAChBI,QAAQC,SAASN,aAAT,YAAd;YACMO,SAAN,GAAkBN,QAAlB;aACOI,MAAMG,OAAb;;;;2BAGK;UACCC,aAAaH,SAASI,aAAT,SAAnB;iBACWH,SAAX;iBACWI,WAAX,CAAuB,KAAKC,OAA5B;;;;2BAlCa;YACP,IAAIC,KAAJ,0BAAN;;;;2BAGY;UACR,CAAC,KAAKX,QAAV,EAAoB;aACbY,MAAL;;;aAGK,KAAKZ,QAAZ;;;;;;ACTG,SAASa,QAAT,CAAkBC,MAAlB,EAA0B;SACxBC,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAeH,MAAf,CAAX,CAAP;CAGF,AACA,AAAO,AAuBP,AAUA,AAUA;;IClDaI,WAAb;yBACgB;;;QACRC,IAAIC,MAAJ,KAAeF,WAAnB,EAAgC;YACxB,IAAIP,KAAJ,EAAN;;;;;;+BAIOU,IAPb,EAOmB;aACRA,IAAP;;;;6BAGOA,IAXX,EAWiB;aACNA,IAAP;;;;;;AAIJ,IAAMC,iBAAiB;;;;;;;;;EAAkBJ,WAAlB,IAAvB;;IAEqBK;;;;;;;2BASY;UAA1BC,OAA0B,uEAAhBF,cAAgB;;aACtBG,MAAM,KAAKC,OAAX,EACJC,IADI,CACC,UAACC,IAAD;eAAUA,KAAKC,IAAL,EAAV;OADD,EAEJF,IAFI,CAECH,QAAQM,UAFT,CAAP;;;;yBAKGT,MAAgC;UAA1BG,OAA0B,uEAAhBF,cAAgB;;UAC7BS,kBAAkB;cAChBP,QAAQQ,QAAR,CAAiBX,IAAjB,CADgB;iBAEb;;SAFa;;OAAxB;;aAQOI,MAAM,KAAKQ,QAAX,EAAqBF,eAArB,EACJJ,IADI,CACC,KAAKO,QADN,CAAP;;;;2BAvBY;YACN,IAAIvB,KAAJ,8CAAN;;;;2BAGa;YACP,IAAIA,KAAJ,8CAAN;;;;;;ACpBJ,IAAMwB,mBAAmB;;;oBACT;;;;;;;+BAIHd,IALY,EAKN;aACRA,KAAKe,GAAL,CAAS,UAACC,IAAD,EAAU;gBAChBA,KAAKC,IAAb;;mBAEW,EAACA,MAAM,CAAP,EAAUjB,MAAM,EAACkB,MAAMF,KAAKG,GAAZ,EAAhB,EAAkCC,SAASN,iBAAiBO,oBAAjB,CAAsCL,KAAKI,OAA3C,CAA3C,EAAP;;mBAEO,EAACH,MAAM,CAAP,EAAUjB,MAAMgB,KAAKM,QAArB,EAA+BF,SAASN,iBAAiBS,mBAAjB,CAAqCP,KAAKI,OAA1C,EAAmDJ,KAAKQ,KAAxD,CAAxC,EAAP;;;eAGG,EAAP;OARK,CAAP;;;;6BAYOxB,IAlBc,EAkBR;aACNN,KAAKE,SAAL,CAAeI,IAAf,CAAP;;;;yCAGmBoB,OAtBE,EAsBO;aACrBA,QAAQL,GAAR,CAAY,UAACC,IAAD,EAAU;eACpB,EAACS,OAAOT,KAAKU,SAAb,EAAwBC,YAAYX,KAAKY,KAAzC,EAAgDC,OAAOb,KAAKa,KAAL,CAAWC,GAAlE,EAAP;OADK,CAAP;;;;wCAKkBV,OA5BG,EA4BMW,YA5BN,EA4BoB;aAClCX,QAAQL,GAAR,CAAY,UAACC,IAAD,EAAU;eACpB,EAACS,OAAOT,KAAKQ,KAAL,KAAeO,YAAf,GAA8B,IAA9B,GAAqC,KAA7C,EAAoDb,MAAMF,KAAKG,GAA/D,EAAP;OADK,CAAP;;;;EA7BuCtB,WAAlB,IAAzB;;IAmCMmC;;;;2BAEU;;;;;2BAIO;aACZ,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,MAArB,CAA4B,UAACC,GAAD,EAAMd,QAAN,EAAmB;eAC7Cc,OAAOd,SAASe,mBAAT,GAA+B,CAA/B,GAAmC,CAA1C,CAAP;OADK,EAEJ,CAFI,CAAP;;;;2BAKa;aACN,KAAKC,SAAL,CAAeC,IAAf,GAAsB,KAAKN,KAAL,CAAWM,IAAxC;;;;yBAGWC,OAAO;WACbP,KAAL,CAAWM,IAAX,GAAkBC,KAAlB;;UAEI,CAAC,KAAKP,KAAL,CAAWM,IAAhB,EAAsB;aACfE,YAAL;;;2BAIW;aACN,KAAKR,KAAL,CAAWM,IAAlB;;;;2BAGU;aACH,KAAKN,KAAL,CAAWS,IAAlB;;;;2BAGoB;aACb,KAAKT,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWU,YAAhC,CAAP;;;;2BAGU;UACJC,QAAQ,EAAd;YACMxB,OAAN,GAAgB,KAAKyB,cAArB;YACMN,IAAN,GAAa,KAAKO,QAAlB;;aAEOF,KAAP;;;;2BAGW;aACJ,CAAC,KAAKG,QAAN,IAAkB,CAAC,KAAKC,KAA/B;;;;uBAGY;;;;;WAGPC,YAAL,GAAoB;cACV,CADU;aAEX;KAFT;;WAKKf,SAAL,GAAiB,EAAjB;WACKI,SAAL,GAAiBY,OAAOC,MAAP,CAAc;cACrB,GADqB;cAErB,CAFqB;sBAGb,CAHa;mBAIhB3D,SAAS,OAAK0C,SAAd;KAJE,CAAjB;WAMKD,KAAL,GAAaiB,OAAOE,MAAP,CAAc,EAAd,EAAkB,OAAKd,SAAvB,CAAb;;;;;;gCAGU;WACLL,KAAL,GAAaiB,OAAOE,MAAP,CAAc,EAAd,EAAkB,KAAKd,SAAvB,EAAkC,EAACJ,WAAW1C,SAAS,KAAK0C,SAAd,CAAZ,EAAlC,CAAb;;;;6BAGyB;wCAAjBmB,eAAiB;uBAAA;;;WACpBC,oBAAL,CAA0BD,eAA1B;;UAEI,KAAKE,eAAL,CAAqBlB,mBAAzB,EAA8C;aACvCmB,YAAL;OADF,MAEO;aACAvB,KAAL,CAAWS,IAAX,GAAkBe,KAAKC,GAAL,CAAS,CAAT,EAAY,KAAKzB,KAAL,CAAWS,IAAX,GAAkB,CAA9B,CAAlB;;YAEI,KAAKT,KAAL,CAAWS,IAAX,GAAkB,CAAtB,EAAyB;eAClBD,YAAL;SADF,MAEO;eACAe,YAAL;;;;;;mCAKS;WACRvB,KAAL,CAAWU,YAAX;;UAEI,KAAKV,KAAL,CAAWU,YAAX,IAA2B,KAAKV,KAAL,CAAWC,SAAX,CAAqByB,MAApD,EAA4D;aACrDlB,YAAL;OADF,MAEO;aACAmB,cAAL;;;;;yCAIiBC,eAAe;UAC5BzC,UAAU,KAAKmC,eAAL,CAAqBnC,OAArC;oBACc0C,OAAd,CAAsB,UAAC9C,IAAD,EAAU;gBACtBA,IAAR,EAAc+C,YAAd,GAA6B,IAA7B;OADF;;UAIMC,UAAU5C,QAAQ6C,SAAR,CAAkB,UAACjD,IAAD,EAAOkD,CAAP;eAAalD,KAAKS,KAAL,IAAc,CAACT,KAAK+C,YAApB,IAAoC,CAAC/C,KAAKS,KAAN,IAAeT,KAAK+C,YAArE;OAAlB,IAAuG,CAAvH;WACKR,eAAL,CAAqBlB,mBAArB,GAA2C2B,OAA3C;aACOA,OAAP;;;;mCAGa;;;qCAIE;;;2BAIV;uHACalD,gBAAlB;;;;EApHoBZ;;AAwHxB,IAAMiE,QAAQ,IAAInC,SAAJ,EAAd,CACA;;AC9JA,IAAMoC,mBAAN;AACA,AAAO,IAAMC,2FAAyFD,QAA/F;;AAEP,AAAO,IAAME,WAAWpB,OAAOC,MAAP,CAAc;+FAAA;8HAEMM,KAAKc,KAAL,CAAWC,MAAUlC,SAAV,CAAoBC,IAApB,GAA2B,EAAtC,CAA1C;CAFsB,CAAjB;;ICFckC;;;0BAEP7B,KAAZ,EAAmB;;;;;UAGZ8B,MAAL,GAAc9B,KAAd;;;;;;qCAae;;;2BAIV;;;UACC+B,YAAY,KAAKtF,OAAvB;;UAEMuF,SAASD,UAAUxF,aAAV,gBAAf;aACO0F,OAAP,GAAiB,YAAM;eAChBC,cAAL;OADF;;aAIOH,SAAP;;;;oCAGc;UACRpC,OAAO,KAAKmC,MAAL,CAAYnC,IAAzB;;UAEMwC,OAAOtB,KAAKuB,KAAL,CAAWzC,OAAO,EAAlB,CAAb;UACM0C,OAAO1C,OAAQwC,OAAO,EAA5B;;UAEIA,IAAJ,EAAU;eACEA,IAAV,8CAAyBE,IAAzB;OADF,MAEO;eACKA,IAAV;;;;;2BAlCW;4FAEsBjF,QAAA,CAAckF,QADjD,cACkElF,QAAA,CAAckF,QADhF,0NAGqC,KAAKC,aAAL,EAHrC,+EAGiF,KAAKT,MAAL,CAAYtD,OAH7F,4LAI8D,KAAKsD,MAAL,CAAYU,gBAJ1E;;;;EATwC5G;;ICAvBiG;;;;;;;;;;qCAUF;;;2BAIV;;;UACCE,YAAY,KAAKtF,OAAvB;;UAEMuF,SAASD,UAAUxF,aAAV,gBAAf;aACO0F,OAAP,GAAiB,YAAM;eAChBC,cAAL;OADF;;aAIOH,SAAP;;;;2BArBa;0FAEoB3E,QAAA,CAAckF,QAD/C,cACgElF,QAAA,CAAckF,QAD9E;;;;EAFwC1G;;ICAvB6G;;;;;;;;;;2BAaZ;;;UACCT,SAAS,KAAKvF,OAAL,CAAaF,aAAb,cAAf;aACO0F,OAAP,GAAiB,YAAM;eAChBS,YAAL;OADF;;;;mCAKa;;;2BAlBA;2FAEoBhB,SAASY,QAD1C,cAC2DZ,SAASY,QADpE,wRAKMZ,SAASiB,KALf;;;;EAHqC/G;;ICAnCgH;8BACU;;;SACPC,IAAL,GAAY,IAAIJ,WAAJ,EAAZ;;;;;2BAGK;WACAI,IAAL,CAAUlG,MAAV;WACKkG,IAAL,CAAUC,IAAV;WACKD,IAAL,CAAUH,YAAV,GAAyB,YAAM;iBACpBK,IAAT,GAAgBC,YAAYC,YAAZ,CAAyBC,IAAzC;OADF;;kBAIYC,gBAAZ;;;;;;AAIJ,cAAe,IAAIP,gBAAJ,EAAf;;ICjBqBQ;;;yBAEP1E,QAAZ,EAAsB;;;;;UAGf2E,SAAL,GAAiB3E,QAAjB;;;;;;+BAiBS4E,OAAOC,QAAQ;4JAG0CD,KAFlE,6DAG+CA,KAH/C;;;;+BAOmB;;;2BAId;;;UACCvB,YAAY,KAAKtF,OAAvB;;WAEK+B,OAAL,GAAegF,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2B5B,UAAU6B,gBAAV,iBAA3B,EAAwE,CAAxE,CAAf;WACKC,YAAL,GAAoB9B,UAAUxF,aAAV,sBAApB;;UAEMuH,iBAAiBN,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2B5B,UAAU6B,gBAAV,mBAA3B,EAA0E,CAA1E,CAAvB;;qBAEe1C,OAAf,CAAuB,UAAC9C,IAAD,EAAOkD,CAAP,EAAa;aAC7ByC,gBAAL,UAA+B,UAACC,KAAD,EAAW;gBAClCC,cAAN;;cAEI,OAAKC,YAAT,EAAuB;mBAChBA,YAAL,CAAkBC,KAAlB;;;iBAGGD,YAAL,GAAoBV,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BvF,KAAKwF,gBAAL,SAA3B,EAA2D,CAA3D,CAApB;SAPF;;eAUOQ,gBAAP,CAAwBhG,IAAxB,EAA8BoF,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2B,OAAKN,SAAL,CAAe7E,OAA1C,EAAmD,CAAnD,EAAsD8C,CAAtD,EAAyDhD,IAAvF,EAA6F,KAA7F,EAAoG,IAApG;OAXF;;WAcKE,OAAL,CAAa0C,OAAb,CAAqB,UAAC9C,IAAD,EAAU;YACvBiG,WAAWjG,KAAK7B,aAAL,SAAjB;;iBAESwH,gBAAT,UAAmC,YAAM;iBAClCO,kBAAL;SADF;OAHF;;WAQKT,YAAL,CAAkBU,QAAlB,GAA6B,IAA7B;;WAEKV,YAAL,CAAkB5B,OAAlB,GAA4B,UAAC+B,KAAD,EAAW;cAC/BC,cAAN;;YAEMhD,gBAAgB,EAAtB;cACMwC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2B,OAAKnF,OAAhC,EAAyC,CAAzC,EAA4C0C,OAA5C,CAAoD,UAAC9C,IAAD,EAAOkD,CAAP,EAAUkD,KAAV,EAAoB;cAClE,OAAKhG,OAAL,CAAa8C,CAAb,EAAgB/E,aAAhB,UAAuCkI,OAA3C,EAAoD;0BACpCC,IAAd,CAAmBpD,CAAnB;;SAFJ;;eAMKqD,QAAL,eAAiB1D,aAAjB;OAVF;;;;yCAcmB;WACd4C,YAAL,CAAkBU,QAAlB,GAA6B,KAA7B;;;;2BAzEa;;;6HAGS,KAAKlB,SAAL,CAAejG,IAAf,CAAoBwH,WAApB,EAFtB,mDAIMpB,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2B,KAAKN,SAAL,CAAe7E,OAA1C,EAAmD,CAAnD,EAAsDL,GAAtD,CAA0D,UAACoF,MAAD,EAASD,KAAT;eACzD,OAAKuB,UAAL,CAAgBvB,KAAhB,EAAuBC,MAAvB,CADyD;OAA1D,CAJN;;;;EATuC3H;;ICAtBkJ;;;0BACPpG,QAAZ,EAAsB;;;;;UAGf2E,SAAL,GAAiB3E,QAAjB;;;;;;iCAmBW4E,OAAOC,QAAQ;gHAE+BD,KADzD,+BACwFA,KADxF,8GAG4CC,OAAOtE,KAHnD,oBAIMsE,OAAOxE,UAJb;;;;+BASmB;;;2BAId;;;UACCgD,YAAY,KAAKtF,OAAvB;UACM+B,UAAUgF,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2B5B,UAAU6B,gBAAV,wBAA3B,EAA+E,CAA/E,CAAhB;UACMmB,SAAShD,UAAUxF,aAAV,mBAAf;;UAEMyI,aAAa,KAAK3B,SAAL,CAAejG,IAAlC;aACOgH,gBAAP,CAAwBW,MAAxB,EAAgCC,WAAW1G,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD;;;;;;;6BAEmBE,OAAnB,8HAA4B;cAAnB+E,MAAmB;;iBACnBQ,gBAAP,UAAiC,UAACC,KAAD,EAAW;kBACpCC,cAAN;;gBAEMgB,iBAAiBjB,MAAMkB,aAA7B;gBACM5B,QAAQ2B,eAAe1I,aAAf,mBAA+CqD,KAA7D;mBACK+E,QAAL,CAAcrB,KAAd;WALF;;;;;;;;;;;;;;;;;;;2BAvCW;;;oZAQLE,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2B,KAAKN,SAAL,CAAe7E,OAA1C,EAAmD,CAAnD,EAAsDL,GAAtD,CAA0D,UAACoF,MAAD,EAASD,KAAT;eAC1D,OAAK6B,YAAL,CAAkB7B,KAAlB,EAAyBC,MAAzB,CAD0D;OAA1D,CAPR;;;;EARwC3H;;ICGtCwJ;yBAEQ7D,QAAZ,EAAmB;;;SACZ8D,MAAL,GAAc9D,QAAd;;;;;2BAGK;;;cACG,KAAK8D,MAAL,CAAY1E,eAAZ,CAA4BtC,IAApC;aACO,KAAKgH,MAAL,CAAYhF,YAAZ,CAAyBiF,MAA9B;eACOzC,IAAL,GAAY,IAAI0C,cAAJ,CAAe,KAAKF,MAAL,CAAY1E,eAA3B,CAAZ;;aAEG,KAAK0E,MAAL,CAAYhF,YAAZ,CAAyBmF,KAA9B;eACO3C,IAAL,GAAY,IAAI4C,aAAJ,CAAc,KAAKJ,MAAL,CAAY1E,eAA1B,CAAZ;;;;WAICkC,IAAL,CAAUlG,MAAV;WACKkG,IAAL,CAAUC,IAAV;WACKD,IAAL,CAAU8B,QAAV,GAAqB;;;eAAsB,gBAAKU,MAAL,EAAY9B,MAAZ,yBAAtB;OAArB;;WAEK8B,MAAL,CAAYrE,cAAZ,GAA6B,YAAM;oBACrB0E,QAAZ;OADF;;WAIKL,MAAL,CAAYxF,YAAZ,GAA2B,YAAM;YAC3B,MAAKwF,MAAL,CAAYM,MAAhB,EAAwB;mBACb5C,IAAT,GAAgBC,YAAYC,YAAZ,CAAyB2C,MAAzC;SADF,MAEO;mBACI7C,IAAT,GAAmBC,YAAYC,YAAZ,CAAyB2C,MAA5C,SAAsD9I,KAAKE,SAAL,CAAe,MAAKqI,MAAL,CAAYvD,MAA3B,CAAtD;;;cAGG+D,OAAL;OAPF;;UAUI,KAAKR,MAAL,CAAYhG,KAAZ,CAAkBU,YAAlB,KAAmC,CAAvC,EAA0C;oBAC5B+F,aAAZ,CAA0B,KAAKT,MAAL,CAAYlF,QAAtC;;aAEK4F,KAAL,GAAaC,YAAY;iBACrB,MAAKC,WAAL,EADqB;SAAZ,EAET,IAFS,CAAb;;;;;8BAMM;oBACM,KAAKF,KAAnB;WACKV,MAAL,CAAYa,SAAZ;;;;kCAGY;WACPb,MAAL,CAAYlF,QAAZ;;;;;;AAIJ,WAAe,IAAIiF,aAAJ,CAAkBxD,KAAlB,CAAf;;ACrDA,IAAMuE,gBAAgB;;;;;;;;;;+BACT/I,IADS,EACH;UACX,CAACA,IAAL,EAAW;eACF,EAAP;;;WAGG8D,OAAL,CAAa,UAAC9C,IAAD,EAAOkF,KAAP,EAAiB;YACxB,CAAClF,KAAKgI,cAAL,WAAD,IAAmC,CAAChI,KAAKgI,cAAL,QAAxC,EAAqE;eAC9DC,MAAL,CAAY/C,KAAZ,EAAmB,CAAnB;;OAFJ;aAKOlG,IAAP;;;;6BAGOA,IAdW,EAcL;aACNN,KAAKE,SAAL,CAAeI,IAAf,CAAP;;;;EAfoCH,WAAlB,IAAtB;;IAmBMqJ;;;yBACU;;;;;WAGPxE,MAAL,GAAc,EAAd;;;;;;yBAWG1E,MAAM;oHACEA,IAAX,EAAiB+I,aAAjB;;;;2BAGK;2HACaA,aAAlB;;;;2BAbY;aACL1E,UAAP;;;;2BAGa;aACNA,UAAP;;;;EAZsBnE;;AAwB1B,kBAAe,IAAIgJ,WAAJ,EAAf;;AChDA,IAAMC,iBAAiB,SAAjBA,cAAiB;;CAAvB;;AAcA,AAAe,SAASC,UAAT,GAAsB;MAC7BtK,QAAQC,SAASN,aAAT,YAAd;QACMO,SAAN,GAAkBmK,gBAAlB;SACOrK,MAAMG,OAAb;;;ICTIoK;yBACU;;;;;SACPxD,YAAL,GAAoB;iBAAA;kBAAA;;KAApB;;WAMOyD,YAAP,GAAsB,YAAM;YACrBC,YAAL;KADF;;QAIMC,kBAAkB,KAAKC,WAA7B;;UAEMC,IAAN,GACGpJ,IADH,CACQ,UAACN,IAAD;aAAU,MAAK2J,KAAL,CAAW3J,IAAX,CAAV;KADR,EAEGM,IAFH,CAEQ,YAAM;aACHsJ,YAAYF,IAAZ,EAAP;KAHJ,EAIKG,KAJL,CAIW,YAAM;aACN,EAAP;KALJ,EAOGvJ,IAPH,CAOQ,UAACsC,KAAD,EAAW;kBACH8B,MAAZ,GAAqB9B,KAArB;KARJ,EASKtC,IATL,CASU,YAAM;aACL,IAAIwJ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;;OAAjC,CAAP;KAVJ,EAcK1J,IAdL,CAcU,YAAM;;YAEPiJ,YAAL;KAhBJ,EAkBGM,KAlBH,CAkBSI,OAAOC,OAAP,CAAeC,KAlBxB;;;;;0BAqBIjI,WAAW;;;YACTA,SAAN,GAAkBA,SAAlB;;WAEKkI,OAAL,0CACG,KAAKvE,YAAL,CAAkBwE,OADrB,EAC+BC,OAD/B,2BAEG,KAAKzE,YAAL,CAAkBC,IAFrB,EAE4ByE,IAF5B,2BAGG,KAAK1E,YAAL,CAAkB2C,MAHrB,EAG8BgC,MAH9B;;;;2BAOK;;;kCAIOjI,MAAM;UACZkI,SAAS1L,SAASI,aAAT,UAAf;aACOC,WAAP,CAAmBuJ,YAAnB;;WAEK+B,iBAAL,GAAyBT,OAAOU,mBAAP,CAA2BpI,IAA3B,CAAzB;;;;uCAGiB;UACXkI,SAAS1L,SAASI,aAAT,UAAf;aACOH,SAAP;;UAEI,KAAK0L,iBAAT,EAA4B;aACrBA,iBAAL;;;;;kCAIU;cACJE,IAAR;;;;+BAGS;WACJA,IAAL;;;;mCAGa;UACPC,SAAS,KAAKC,iBAAL,CAAuBC,SAASpF,IAAhC,CAAf;;WAEKqF,gBAAL,CAAsB,KAAKC,gBAAL,CAAsBF,SAASpF,IAA/B,CAAtB,EAA4DkF,MAA5D;;;;qCAGelF,MAAM;UACjBuF,eAAevF,KAAKwF,OAAL,SAAnB;;UAEMjF,QAAQP,KAAKyF,OAAL,KAAd;UACIlF,QAAQ,CAAZ,EAAe;uBACEgF,aAAaG,MAAb,CAAoB,CAApB,EAAuBnF,QAAQ,CAA/B,CAAf;;;aAGKgF,YAAP;;;;sCAGgBvF,MAAM;UAClBuF,eAAevF,KAAKwF,OAAL,SAAnB;UACMjF,QAAQP,KAAKyF,OAAL,KAAd;;UAEIlF,QAAQ,CAAZ,EAAe;uBACEgF,aAAaG,MAAb,CAAoBnF,KAApB,CAAf;;;UAGE;eACKxG,KAAKC,KAAL,CAAWuL,YAAX,CAAP;OADF,CAEE,OAAOf,KAAP,EAAc;eACP,IAAP;;;;;uCAIiC;UAApBmB,KAAoB;UAART,MAAQ;;UAC7BU,aAAa,KAAKnB,OAAL,CAAakB,KAAb,CAAnB;WACK7C,OAAL;;UAEI8C,UAAJ,EAAgB;mBACHX,IAAX,CAAgBC,MAAhB;OADF,MAEO;aACApB,WAAL;;;;;;;AAKN,kBAAe,IAAIJ,WAAJ,EAAf;;ICxHMmC;;;;;;;yBACCC,UAAU;UACTA,QAAJ,EAAc;oBACAC,IAAZ,CAAiBD,QAAjB;aACKhG,IAAL,GAAY,IAAIkG,cAAJ,CAAgBzI,OAAOE,MAAP,CAAc,EAAd,EAAkBqI,QAAlB,EAA4B,EAACrG,kBAAkB,KAAKwG,mBAAL,CAAyBH,QAAzB,CAAnB,EAA5B,CAAhB,CAAZ;OAFF,MAIO;aACAhG,IAAL,GAAY,IAAIoG,gBAAJ,EAAZ;;;WAGGpG,IAAL,CAAUlG,MAAV;WACKkG,IAAL,CAAUC,IAAV;;WAEKD,IAAL,CAAUX,cAAV,GAA2B,YAAM;iBACtBa,IAAT,GAAgBC,YAAYC,YAAZ,CAAyBwE,OAAzC;OADF;;kBAIYtE,gBAAZ;;;;wCAGkB0F,UAAU;eACnBK,cAAT,GAA0B,IAA1B;;UAEMC,cAAcnC,YAAYlF,MAAhC;kBACY4C,IAAZ,CAAiBmE,QAAjB;;kBAEYO,IAAZ,CAAiB,UAACC,CAAD,EAAIC,CAAJ,EAAU;eAClBA,EAAE9K,OAAF,GAAY6K,EAAE7K,OAAd,IAAyB6K,EAAE1J,IAAF,GAAS2J,EAAE3J,IAA3C;OADF;;UAIM4J,cAAcJ,YAAY9H,SAAZ,CAAsB,UAACjD,IAAD,EAAU;YAC9CA,KAAK8K,cAAT,EAAyB;eAClBA,cAAL,GAAsB,KAAtB;iBACO,IAAP;;;eAGK,KAAP;OANkB,CAApB;;UASMtB,SAAS,MAAQ2B,WAAD,GAAgBJ,YAAYpI,MAA7B,GAAuC,GAA5D;aACOF,KAAKuB,KAAL,CAAWwF,MAAX,OAAP;;;;;;AAGJ,aAAe,IAAIgB,eAAJ,EAAf;;;;"}